{"ast":null,"code":"var _jsxFileName = \"/DATA1/elcom/aisf2/aisf/frontend/src/pages/analytics/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, Statistic, Select, DatePicker, Tabs, Button, Space, Typography, Spin } from 'antd';\nimport { LineChart, Line, AreaChart, Area, BarChart, Bar, RadarChart, Radar, PolarGrid, PolarAngleAxis, PolarRadiusAxis, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, ComposedChart } from 'recharts';\nimport { DashboardOutlined, BarChartOutlined, LineChartOutlined, DownloadOutlined, ReloadOutlined } from '@ant-design/icons';\nimport dayjs from 'dayjs';\nimport { FARM_CODES, exportToCSV } from '../../utils/dataProcessor';\nimport { loadIntegratedData, isUsingRealData, generateDataStatistics } from '../../utils/realDataProcessor';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\nconst {\n  RangePicker\n} = DatePicker;\nconst AnalyticsDashboard = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [selectedFarms, setSelectedFarms] = useState(['PF_0021128', 'PF_0010052']);\n  const [dateRange, setDateRange] = useState([dayjs('2020-01-01'), dayjs('2020-12-31')]);\n  const [analyticsData, setAnalyticsData] = useState({});\n  const [kpiData, setKpiData] = useState({});\n  const [activeTab, setActiveTab] = useState('environment');\n\n  // 데이터 로딩\n  useEffect(() => {\n    loadAnalyticsData();\n  }, [selectedFarms, dateRange]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const loadAnalyticsData = async () => {\n    setLoading(true);\n    try {\n      const startDate = dateRange[0].format('YYYY-MM-DD');\n      const endDate = dateRange[1].format('YYYY-MM-DD');\n      console.log('데이터 로딩 시작:', {\n        selectedFarms,\n        startDate,\n        endDate\n      });\n      const data = await loadIntegratedData({\n        farmCodes: selectedFarms,\n        startDate,\n        endDate,\n        dataTypes: ['environment', 'growth', 'management', 'control'],\n        interpolationMethod: 'linear',\n        handleOutliers: true\n      });\n      console.log('로딩된 데이터:', data);\n      console.log('실제 데이터 사용 여부:', isUsingRealData());\n\n      // 데이터 통계 생성\n      const stats = generateDataStatistics(data);\n      console.log('데이터 통계:', stats);\n      setAnalyticsData(data);\n      calculateKPIs(data);\n    } catch (error) {\n      console.error('데이터 로딩 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // KPI 계산\n  const calculateKPIs = data => {\n    let totalYield = 0;\n    let totalRevenue = 0;\n    let totalCost = 0;\n    let avgTemperature = 0;\n    let avgHumidity = 0;\n    let healthScores = [];\n    let farmCount = 0;\n    Object.keys(data).forEach(farmCode => {\n      const farmData = data[farmCode];\n      farmCount++;\n\n      // 경영 데이터 집계\n      if (farmData.management && farmData.management.length > 0) {\n        const lastManagementData = farmData.management[farmData.management.length - 1];\n        totalYield += lastManagementData.cumulativeYield || 0;\n        totalRevenue += lastManagementData.cumulativeRevenue || 0;\n        totalCost += lastManagementData.cumulativeCost || 0;\n      }\n\n      // 환경 데이터 평균\n      if (farmData.environment && farmData.environment.length > 0) {\n        const envAvg = farmData.environment.reduce((acc, curr) => ({\n          temperature: acc.temperature + curr.temperature,\n          humidity: acc.humidity + curr.humidity\n        }), {\n          temperature: 0,\n          humidity: 0\n        });\n        avgTemperature += envAvg.temperature / farmData.environment.length;\n        avgHumidity += envAvg.humidity / farmData.environment.length;\n      }\n\n      // 생육 데이터 건강도\n      if (farmData.growth && farmData.growth.length > 0) {\n        farmData.growth.forEach(g => healthScores.push(g.healthScore));\n      }\n    });\n    const avgHealthScore = healthScores.length > 0 ? healthScores.reduce((a, b) => a + b, 0) / healthScores.length : 0;\n    const profit = totalRevenue - totalCost;\n    const profitMargin = totalRevenue > 0 ? profit / totalRevenue * 100 : 0;\n    setKpiData({\n      totalYield: Math.round(totalYield * 10) / 10,\n      totalRevenue: Math.round(totalRevenue),\n      totalCost: Math.round(totalCost),\n      profit: Math.round(profit),\n      profitMargin: Math.round(profitMargin * 10) / 10,\n      avgTemperature: Math.round(avgTemperature / farmCount * 10) / 10,\n      avgHumidity: Math.round(avgHumidity / farmCount * 10) / 10,\n      avgHealthScore: Math.round(avgHealthScore * 10) / 10,\n      activeFarms: farmCount\n    });\n  };\n\n  // 환경 분석 컴포넌트\n  const EnvironmentAnalysis = () => {\n    const environmentChartData = [];\n\n    // 시간별 환경 데이터 집계\n    const timeMap = new Map();\n    Object.keys(analyticsData).forEach(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (farmData.environment) {\n        farmData.environment.forEach(env => {\n          const timeKey = env.date;\n          if (!timeMap.has(timeKey)) {\n            timeMap.set(timeKey, {\n              date: timeKey,\n              temperature: [],\n              humidity: [],\n              co2: [],\n              farms: []\n            });\n          }\n          const timeData = timeMap.get(timeKey);\n          timeData.temperature.push(env.temperature);\n          timeData.humidity.push(env.humidity);\n          timeData.co2.push(env.co2);\n          timeData.farms.push(FARM_CODES[farmCode].name);\n        });\n      }\n    });\n\n    // 일별 평균 계산\n    Array.from(timeMap.values()).sort((a, b) => a.date.localeCompare(b.date)).slice(0, 30) // 최근 30일만 표시\n    .forEach(timeData => {\n      environmentChartData.push({\n        date: timeData.date,\n        temperature: Math.round(timeData.temperature.reduce((a, b) => a + b, 0) / timeData.temperature.length * 10) / 10,\n        humidity: Math.round(timeData.humidity.reduce((a, b) => a + b, 0) / timeData.humidity.length * 10) / 10,\n        co2: Math.round(timeData.co2.reduce((a, b) => a + b, 0) / timeData.co2.length)\n      });\n    });\n    return /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"\\uD658\\uACBD \\uB370\\uC774\\uD130 \\uD2B8\\uB80C\\uB4DC\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n              data: environmentChartData,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                yAxisId: \"temp\",\n                orientation: \"left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                yAxisId: \"co2\",\n                orientation: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                yAxisId: \"temp\",\n                type: \"monotone\",\n                dataKey: \"temperature\",\n                stroke: \"#ff7300\",\n                name: \"\\uC628\\uB3C4(\\xB0C)\",\n                strokeWidth: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                yAxisId: \"temp\",\n                type: \"monotone\",\n                dataKey: \"humidity\",\n                stroke: \"#387908\",\n                name: \"\\uC2B5\\uB3C4(%)\",\n                strokeWidth: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                yAxisId: \"co2\",\n                dataKey: \"co2\",\n                fill: \"#8884d8\",\n                name: \"CO2(ppm)\",\n                opacity: 0.6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"\\uB18D\\uC7A5\\uBCC4 \\uD658\\uACBD \\uBE44\\uAD50\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 250,\n            children: /*#__PURE__*/_jsxDEV(RadarChart, {\n              data: getFarmEnvironmentComparison(),\n              children: [/*#__PURE__*/_jsxDEV(PolarGrid, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(PolarAngleAxis, {\n                dataKey: \"metric\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(PolarRadiusAxis, {\n                angle: 30,\n                domain: [0, 100]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Radar, {\n                dataKey: \"score\",\n                stroke: \"#8884d8\",\n                fill: \"#8884d8\",\n                fillOpacity: 0.3,\n                strokeWidth: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"\\uD658\\uACBD \\uCD5C\\uC801\\uD654 \\uD604\\uD669\",\n          children: /*#__PURE__*/_jsxDEV(Space, {\n            direction: \"vertical\",\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Statistic, {\n              title: \"\\uC628\\uB3C4 \\uCD5C\\uC801\\uD654\\uC728\",\n              value: calculateOptimizationRate('temperature'),\n              suffix: \"%\",\n              valueStyle: {\n                color: '#52c41a'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              title: \"\\uC2B5\\uB3C4 \\uCD5C\\uC801\\uD654\\uC728\",\n              value: calculateOptimizationRate('humidity'),\n              suffix: \"%\",\n              valueStyle: {\n                color: '#1890ff'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              title: \"CO2 \\uCD5C\\uC801\\uD654\\uC728\",\n              value: calculateOptimizationRate('co2'),\n              suffix: \"%\",\n              valueStyle: {\n                color: '#722ed1'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 생육 분석 컴포넌트\n  const GrowthAnalysis = () => {\n    const growthChartData = [];\n    Object.keys(analyticsData).forEach(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (farmData.growth) {\n        farmData.growth.forEach(growth => {\n          growthChartData.push({\n            ...growth,\n            farmName: FARM_CODES[farmCode].name\n          });\n        });\n      }\n    });\n\n    // 주차별 평균 생육 데이터\n    const weeklyGrowthData = [];\n    const weekMap = new Map();\n    growthChartData.forEach(growth => {\n      if (!weekMap.has(growth.week)) {\n        weekMap.set(growth.week, {\n          week: growth.week,\n          plantHeight: [],\n          leafLength: [],\n          healthScore: []\n        });\n      }\n      const weekData = weekMap.get(growth.week);\n      weekData.plantHeight.push(growth.plantHeight);\n      weekData.leafLength.push(growth.leafLength);\n      weekData.healthScore.push(growth.healthScore);\n    });\n    Array.from(weekMap.values()).forEach(weekData => {\n      weeklyGrowthData.push({\n        week: `${weekData.week}주차`,\n        plantHeight: Math.round(weekData.plantHeight.reduce((a, b) => a + b, 0) / weekData.plantHeight.length * 10) / 10,\n        leafLength: Math.round(weekData.leafLength.reduce((a, b) => a + b, 0) / weekData.leafLength.length * 10) / 10,\n        healthScore: Math.round(weekData.healthScore.reduce((a, b) => a + b, 0) / weekData.healthScore.length)\n      });\n    });\n    return /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"\\uC0DD\\uC721 \\uC9C4\\uD589 \\uCD94\\uC774\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n              data: weeklyGrowthData,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                yAxisId: \"growth\",\n                orientation: \"left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                yAxisId: \"health\",\n                orientation: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Area, {\n                yAxisId: \"growth\",\n                type: \"monotone\",\n                dataKey: \"plantHeight\",\n                fill: \"#82ca9d\",\n                stroke: \"#82ca9d\",\n                name: \"\\uCD08\\uC7A5(cm)\",\n                fillOpacity: 0.6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                yAxisId: \"growth\",\n                type: \"monotone\",\n                dataKey: \"leafLength\",\n                stroke: \"#8884d8\",\n                name: \"\\uC5FD\\uC7A5(cm)\",\n                strokeWidth: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                yAxisId: \"health\",\n                type: \"monotone\",\n                dataKey: \"healthScore\",\n                stroke: \"#ff7300\",\n                name: \"\\uAC74\\uAC15\\uB3C4(\\uC810)\",\n                strokeWidth: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"\\uB18D\\uC7A5\\uBCC4 \\uC0DD\\uC721 \\uD604\\uD669\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 250,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: getFarmGrowthComparison(),\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"farmName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"avgPlantHeight\",\n                fill: \"#8884d8\",\n                name: \"\\uD3C9\\uADE0 \\uCD08\\uC7A5(cm)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"avgHealthScore\",\n                fill: \"#82ca9d\",\n                name: \"\\uD3C9\\uADE0 \\uAC74\\uAC15\\uB3C4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"\\uC0DD\\uC721 \\uB2E8\\uACC4\\uBCC4 \\uBD84\\uD3EC\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 250,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: getGrowthStageDistribution(),\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"stage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"count\",\n                fill: \"#ff7300\",\n                name: \"\\uB18D\\uC7A5 \\uC218\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 경영 분석 컴포넌트\n  const ManagementAnalysis = () => {\n    const managementChartData = [];\n    Object.keys(analyticsData).forEach(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (farmData.management) {\n        farmData.management.forEach(mgmt => {\n          managementChartData.push({\n            ...mgmt,\n            farmName: FARM_CODES[farmCode].name\n          });\n        });\n      }\n    });\n\n    // 월별 수익 데이터\n    const monthlyData = [];\n    const monthMap = new Map();\n    managementChartData.forEach(mgmt => {\n      const month = mgmt.date.substring(0, 7); // YYYY-MM\n      if (!monthMap.has(month)) {\n        monthMap.set(month, {\n          month,\n          revenue: 0,\n          cost: 0,\n          yield: 0,\n          count: 0\n        });\n      }\n      const monthData = monthMap.get(month);\n      monthData.revenue += mgmt.dailyRevenue || 0;\n      monthData.cost += mgmt.dailyCost || 0;\n      monthData.yield += mgmt.dailyYield || 0;\n      monthData.count++;\n    });\n    Array.from(monthMap.values()).forEach(monthData => {\n      monthlyData.push({\n        month: monthData.month,\n        revenue: Math.round(monthData.revenue),\n        cost: Math.round(monthData.cost),\n        profit: Math.round(monthData.revenue - monthData.cost),\n        yield: Math.round(monthData.yield * 10) / 10\n      });\n    });\n    return /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"\\uC6D4\\uBCC4 \\uACBD\\uC601 \\uC131\\uACFC\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n              data: monthlyData,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                yAxisId: \"money\",\n                orientation: \"left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                yAxisId: \"yield\",\n                orientation: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                formatter: (value, name) => [name.includes('수확량') ? `${value}kg` : `${value.toLocaleString()}원`, name]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                yAxisId: \"money\",\n                dataKey: \"revenue\",\n                fill: \"#52c41a\",\n                name: \"\\uB9E4\\uCD9C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                yAxisId: \"money\",\n                dataKey: \"cost\",\n                fill: \"#ff4d4f\",\n                name: \"\\uBE44\\uC6A9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                yAxisId: \"yield\",\n                type: \"monotone\",\n                dataKey: \"yield\",\n                stroke: \"#1890ff\",\n                name: \"\\uC218\\uD655\\uB7C9(kg)\",\n                strokeWidth: 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"\\uB18D\\uC7A5\\uBCC4 \\uC218\\uC775\\uC131 \\uBE44\\uAD50\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 250,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: getFarmProfitabilityComparison(),\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"farmName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                formatter: value => [`${value}%`, '수익률']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"profitMargin\",\n                fill: \"#722ed1\",\n                name: \"\\uC218\\uC775\\uB960(%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"\\uD22C\\uC790 \\uD6A8\\uC728\\uC131 \\uBD84\\uC11D\",\n          children: /*#__PURE__*/_jsxDEV(Space, {\n            direction: \"vertical\",\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Statistic, {\n              title: \"\\uD3C9\\uADE0 ROI\",\n              value: calculateAverageROI(),\n              suffix: \"%\",\n              precision: 1,\n              valueStyle: {\n                color: '#52c41a'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              title: \"kg\\uB2F9 \\uD3C9\\uADE0 \\uC218\\uC775\",\n              value: calculateRevenuePerKg(),\n              prefix: \"\\u20A9\",\n              valueStyle: {\n                color: '#1890ff'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              title: \"\\uC6B4\\uC601 \\uD6A8\\uC728\\uC131\",\n              value: calculateOperationalEfficiency(),\n              suffix: \"/10\",\n              precision: 1,\n              valueStyle: {\n                color: '#722ed1'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 헬퍼 함수들\n  const getFarmEnvironmentComparison = () => {\n    return selectedFarms.map(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (!farmData || !farmData.environment) return null;\n      const envData = farmData.environment;\n      const avgTemp = envData.reduce((sum, d) => sum + d.temperature, 0) / envData.length;\n      const avgHumidity = envData.reduce((sum, d) => sum + d.humidity, 0) / envData.length;\n      const avgCO2 = envData.reduce((sum, d) => sum + d.co2, 0) / envData.length;\n      return {\n        farmName: FARM_CODES[farmCode].name,\n        metric: '종합 점수',\n        score: Math.round((avgTemp / 25 + avgHumidity / 70 + avgCO2 / 600) / 3 * 100)\n      };\n    }).filter(Boolean);\n  };\n  const getFarmGrowthComparison = () => {\n    return selectedFarms.map(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (!farmData || !farmData.growth) return null;\n      const growthData = farmData.growth;\n      const avgPlantHeight = growthData.reduce((sum, d) => sum + d.plantHeight, 0) / growthData.length;\n      const avgHealthScore = growthData.reduce((sum, d) => sum + d.healthScore, 0) / growthData.length;\n      return {\n        farmName: FARM_CODES[farmCode].name,\n        avgPlantHeight: Math.round(avgPlantHeight * 10) / 10,\n        avgHealthScore: Math.round(avgHealthScore)\n      };\n    }).filter(Boolean);\n  };\n  const getFarmProfitabilityComparison = () => {\n    return selectedFarms.map(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (!farmData || !farmData.management) return null;\n      const mgmtData = farmData.management;\n      const totalRevenue = mgmtData.reduce((sum, d) => sum + (d.dailyRevenue || 0), 0);\n      const totalCost = mgmtData.reduce((sum, d) => sum + (d.dailyCost || 0), 0);\n      const profitMargin = totalRevenue > 0 ? (totalRevenue - totalCost) / totalRevenue * 100 : 0;\n      return {\n        farmName: FARM_CODES[farmCode].name,\n        profitMargin: Math.round(profitMargin * 10) / 10\n      };\n    }).filter(Boolean);\n  };\n  const getGrowthStageDistribution = () => {\n    const stageCount = {};\n    Object.keys(analyticsData).forEach(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (farmData.growth && farmData.growth.length > 0) {\n        const latestGrowth = farmData.growth[farmData.growth.length - 1];\n        const stage = latestGrowth.growthStage;\n        stageCount[stage] = (stageCount[stage] || 0) + 1;\n      }\n    });\n    return Object.keys(stageCount).map(stage => ({\n      stage,\n      count: stageCount[stage]\n    }));\n  };\n  const calculateOptimizationRate = metric => {\n    let totalCount = 0;\n    let optimalCount = 0;\n    Object.keys(analyticsData).forEach(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (farmData.environment) {\n        farmData.environment.forEach(env => {\n          totalCount++;\n          if (metric === 'temperature' && env.temperature >= 18 && env.temperature <= 25) {\n            optimalCount++;\n          } else if (metric === 'humidity' && env.humidity >= 60 && env.humidity <= 75) {\n            optimalCount++;\n          } else if (metric === 'co2' && env.co2 >= 400 && env.co2 <= 800) {\n            optimalCount++;\n          }\n        });\n      }\n    });\n    return totalCount > 0 ? Math.round(optimalCount / totalCount * 100) : 0;\n  };\n  const calculateAverageROI = () => {\n    let totalROI = 0;\n    let farmCount = 0;\n    Object.keys(analyticsData).forEach(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (farmData.management && farmData.management.length > 0) {\n        const lastData = farmData.management[farmData.management.length - 1];\n        const roi = lastData.cumulativeRevenue > 0 ? lastData.profit / lastData.cumulativeCost * 100 : 0;\n        totalROI += roi;\n        farmCount++;\n      }\n    });\n    return farmCount > 0 ? totalROI / farmCount : 0;\n  };\n  const calculateRevenuePerKg = () => {\n    let totalRevenue = 0;\n    let totalYield = 0;\n    Object.keys(analyticsData).forEach(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (farmData.management) {\n        farmData.management.forEach(mgmt => {\n          totalRevenue += mgmt.dailyRevenue || 0;\n          totalYield += mgmt.dailyYield || 0;\n        });\n      }\n    });\n    return totalYield > 0 ? Math.round(totalRevenue / totalYield) : 0;\n  };\n  const calculateOperationalEfficiency = () => {\n    // 환경 최적화율, 생육 건강도, 수익률을 종합한 효율성 점수\n    const tempOptimal = calculateOptimizationRate('temperature') / 100;\n    const humidityOptimal = calculateOptimizationRate('humidity') / 100;\n    const avgHealth = kpiData.avgHealthScore / 100;\n    const profitMargin = Math.max(0, Math.min(1, kpiData.profitMargin / 50)); // 50%를 만점으로\n\n    return (tempOptimal + humidityOptimal + avgHealth + profitMargin) / 4 * 10;\n  };\n  const handleExportData = () => {\n    const exportData = [];\n    Object.keys(analyticsData).forEach(farmCode => {\n      const farmData = analyticsData[farmCode];\n      const farmName = FARM_CODES[farmCode].name;\n\n      // 환경 데이터 추가\n      if (farmData.environment) {\n        farmData.environment.forEach(env => {\n          exportData.push({\n            농장명: farmName,\n            데이터타입: '환경',\n            날짜: env.date,\n            온도: env.temperature,\n            습도: env.humidity,\n            CO2: env.co2,\n            조도: env.lightIntensity\n          });\n        });\n      }\n\n      // 생육 데이터 추가\n      if (farmData.growth) {\n        farmData.growth.forEach(growth => {\n          exportData.push({\n            농장명: farmName,\n            데이터타입: '생육',\n            날짜: growth.date,\n            초장: growth.plantHeight,\n            엽장: growth.leafLength,\n            건강도: growth.healthScore,\n            생육단계: growth.growthStage\n          });\n        });\n      }\n    });\n    exportToCSV(exportData, `analytics_data_${dayjs().format('YYYY-MM-DD')}.csv`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '24px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '24px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        children: [/*#__PURE__*/_jsxDEV(DashboardOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 11\n        }, this), \" \\uB370\\uC774\\uD130 \\uBD84\\uC11D \\uB300\\uC2DC\\uBCF4\\uB4DC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '16px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          type: \"secondary\",\n          children: \"\\uB18D\\uC7A5 \\uB370\\uC774\\uD130 \\uD1B5\\uD569 \\uBD84\\uC11D \\uBC0F \\uC2DC\\uAC01\\uD654\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '4px 8px',\n            borderRadius: '4px',\n            backgroundColor: isUsingRealData() ? '#f6ffed' : '#fff7e6',\n            border: `1px solid ${isUsingRealData() ? '#b7eb8f' : '#ffd591'}`\n          },\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            style: {\n              color: isUsingRealData() ? '#52c41a' : '#fa8c16',\n              fontSize: '12px'\n            },\n            children: isUsingRealData() ? '📊 실제 엑셀 데이터 + 보간' : '🔬 시뮬레이션 데이터'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginBottom: '24px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 16,\n        align: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          sm: 8,\n          children: /*#__PURE__*/_jsxDEV(Space, {\n            direction: \"vertical\",\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              strong: true,\n              children: \"\\uB18D\\uC7A5 \\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              mode: \"multiple\",\n              placeholder: \"\\uB18D\\uC7A5\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\",\n              value: selectedFarms,\n              onChange: setSelectedFarms,\n              style: {\n                width: '100%'\n              },\n              children: Object.keys(FARM_CODES).map(farmCode => /*#__PURE__*/_jsxDEV(Option, {\n                value: farmCode,\n                children: [FARM_CODES[farmCode].name, \" (\", FARM_CODES[farmCode].region, \")\"]\n              }, farmCode, true, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          sm: 8,\n          children: /*#__PURE__*/_jsxDEV(Space, {\n            direction: \"vertical\",\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              strong: true,\n              children: \"\\uAE30\\uAC04 \\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RangePicker, {\n              value: dateRange,\n              onChange: setDateRange,\n              style: {\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          sm: 8,\n          children: /*#__PURE__*/_jsxDEV(Space, {\n            style: {\n              marginTop: '24px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              icon: /*#__PURE__*/_jsxDEV(ReloadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 23\n              }, this),\n              loading: loading,\n              onClick: loadAnalyticsData,\n              children: \"\\uB370\\uC774\\uD130 \\uC0C8\\uB85C\\uACE0\\uCE68\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(DownloadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 797,\n                columnNumber: 23\n              }, this),\n              onClick: handleExportData,\n              children: \"\\uB370\\uC774\\uD130 \\uB0B4\\uBCF4\\uB0B4\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 787,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '50px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Spin, {\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '16px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD84\\uC11D\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        gutter: [16, 16],\n        style: {\n          marginBottom: '24px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          sm: 12,\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Statistic, {\n              title: \"\\uCD1D \\uC218\\uD655\\uB7C9\",\n              value: kpiData.totalYield,\n              suffix: \"kg\",\n              precision: 1,\n              valueStyle: {\n                color: '#52c41a'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          sm: 12,\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Statistic, {\n              title: \"\\uCD1D \\uB9E4\\uCD9C\",\n              value: kpiData.totalRevenue,\n              prefix: \"\\u20A9\",\n              formatter: value => `${(value / 1000000).toFixed(1)}M`,\n              valueStyle: {\n                color: '#1890ff'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          sm: 12,\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Statistic, {\n              title: \"\\uC218\\uC775\\uB960\",\n              value: kpiData.profitMargin,\n              suffix: \"%\",\n              precision: 1,\n              valueStyle: {\n                color: kpiData.profitMargin > 0 ? '#52c41a' : '#ff4d4f'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 842,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          sm: 12,\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Statistic, {\n              title: \"\\uD3C9\\uADE0 \\uAC74\\uAC15\\uB3C4\",\n              value: kpiData.avgHealthScore,\n              suffix: \"\\uC810\",\n              valueStyle: {\n                color: '#722ed1'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          activeKey: activeTab,\n          onChange: setActiveTab,\n          items: [{\n            key: 'environment',\n            label: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(LineChartOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 871,\n                columnNumber: 32\n              }, this), \"\\uD658\\uACBD \\uBD84\\uC11D\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 871,\n              columnNumber: 26\n            }, this),\n            children: EnvironmentAnalysis()\n          }, {\n            key: 'growth',\n            label: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(BarChartOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 32\n              }, this), \"\\uC0DD\\uC721 \\uBD84\\uC11D\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 876,\n              columnNumber: 26\n            }, this),\n            children: GrowthAnalysis()\n          }, {\n            key: 'management',\n            label: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(DashboardOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 881,\n                columnNumber: 32\n              }, this), \"\\uACBD\\uC601 \\uBD84\\uC11D\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 881,\n              columnNumber: 26\n            }, this),\n            children: ManagementAnalysis()\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 729,\n    columnNumber: 5\n  }, this);\n};\n_s(AnalyticsDashboard, \"Ts5Y1B2U8Khvs/XFATW+OL+myzU=\");\n_c = AnalyticsDashboard;\nexport default AnalyticsDashboard;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Card","Row","Col","Statistic","Select","DatePicker","Tabs","Button","Space","Typography","Spin","LineChart","Line","AreaChart","Area","BarChart","Bar","RadarChart","Radar","PolarGrid","PolarAngleAxis","PolarRadiusAxis","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","ComposedChart","DashboardOutlined","BarChartOutlined","LineChartOutlined","DownloadOutlined","ReloadOutlined","dayjs","FARM_CODES","exportToCSV","loadIntegratedData","isUsingRealData","generateDataStatistics","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","Text","Option","RangePicker","AnalyticsDashboard","_s","loading","setLoading","selectedFarms","setSelectedFarms","dateRange","setDateRange","analyticsData","setAnalyticsData","kpiData","setKpiData","activeTab","setActiveTab","loadAnalyticsData","startDate","format","endDate","console","log","data","farmCodes","dataTypes","interpolationMethod","handleOutliers","stats","calculateKPIs","error","totalYield","totalRevenue","totalCost","avgTemperature","avgHumidity","healthScores","farmCount","Object","keys","forEach","farmCode","farmData","management","length","lastManagementData","cumulativeYield","cumulativeRevenue","cumulativeCost","environment","envAvg","reduce","acc","curr","temperature","humidity","growth","g","push","healthScore","avgHealthScore","a","b","profit","profitMargin","Math","round","activeFarms","EnvironmentAnalysis","environmentChartData","timeMap","Map","env","timeKey","date","has","set","co2","farms","timeData","get","name","Array","from","values","sort","localeCompare","slice","gutter","children","span","title","width","height","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","yAxisId","orientation","type","stroke","strokeWidth","fill","opacity","xs","lg","getFarmEnvironmentComparison","angle","domain","fillOpacity","direction","style","value","calculateOptimizationRate","suffix","valueStyle","color","GrowthAnalysis","growthChartData","farmName","weeklyGrowthData","weekMap","week","plantHeight","leafLength","weekData","getFarmGrowthComparison","getGrowthStageDistribution","ManagementAnalysis","managementChartData","mgmt","monthlyData","monthMap","month","substring","revenue","cost","yield","count","monthData","dailyRevenue","dailyCost","dailyYield","formatter","includes","toLocaleString","getFarmProfitabilityComparison","calculateAverageROI","precision","calculateRevenuePerKg","prefix","calculateOperationalEfficiency","map","envData","avgTemp","sum","d","avgCO2","metric","score","filter","Boolean","growthData","avgPlantHeight","mgmtData","stageCount","latestGrowth","stage","growthStage","totalCount","optimalCount","totalROI","lastData","roi","tempOptimal","humidityOptimal","avgHealth","max","min","handleExportData","exportData","농장명","데이터타입","날짜","온도","습도","CO2","조도","lightIntensity","초장","엽장","건강도","생육단계","padding","marginBottom","level","display","alignItems","gap","borderRadius","backgroundColor","border","fontSize","align","sm","strong","mode","placeholder","onChange","region","marginTop","icon","onClick","textAlign","size","toFixed","activeKey","items","key","label","_c","$RefreshReg$"],"sources":["/DATA1/elcom/aisf2/aisf/frontend/src/pages/analytics/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Card, \n  Row, \n  Col, \n  Statistic, \n  Select, \n  DatePicker, \n  Tabs, \n  Button,\n  Space,\n  Typography,\n  Spin\n} from 'antd';\nimport {\n  LineChart,\n  Line,\n  AreaChart, \n  Area, \n  BarChart, \n  Bar,\n  RadarChart,\n  Radar,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  Legend,\n  ResponsiveContainer,\n  ComposedChart\n} from 'recharts';\nimport {\n  DashboardOutlined,\n  BarChartOutlined,\n  LineChartOutlined,\n  DownloadOutlined,\n  ReloadOutlined\n} from '@ant-design/icons';\nimport dayjs from 'dayjs';\nimport { \n  FARM_CODES, \n  exportToCSV \n} from '../../utils/dataProcessor';\nimport { \n  loadIntegratedData, \n  isUsingRealData,\n  generateDataStatistics \n} from '../../utils/realDataProcessor';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\nconst AnalyticsDashboard = () => {\n  const [loading, setLoading] = useState(false);\n  const [selectedFarms, setSelectedFarms] = useState(['PF_0021128', 'PF_0010052']);\n  const [dateRange, setDateRange] = useState([\n    dayjs('2020-01-01'),\n    dayjs('2020-12-31')\n  ]);\n  const [analyticsData, setAnalyticsData] = useState({});\n  const [kpiData, setKpiData] = useState({});\n  const [activeTab, setActiveTab] = useState('environment');\n\n  // 데이터 로딩\n  useEffect(() => {\n    loadAnalyticsData();\n  }, [selectedFarms, dateRange]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const loadAnalyticsData = async () => {\n    setLoading(true);\n    try {\n      const startDate = dateRange[0].format('YYYY-MM-DD');\n      const endDate = dateRange[1].format('YYYY-MM-DD');\n      \n      console.log('데이터 로딩 시작:', { selectedFarms, startDate, endDate });\n      \n      const data = await loadIntegratedData({\n        farmCodes: selectedFarms,\n        startDate,\n        endDate,\n        dataTypes: ['environment', 'growth', 'management', 'control'],\n        interpolationMethod: 'linear',\n        handleOutliers: true\n      });\n      \n      console.log('로딩된 데이터:', data);\n      console.log('실제 데이터 사용 여부:', isUsingRealData());\n      \n      // 데이터 통계 생성\n      const stats = generateDataStatistics(data);\n      console.log('데이터 통계:', stats);\n      \n      setAnalyticsData(data);\n      calculateKPIs(data);\n    } catch (error) {\n      console.error('데이터 로딩 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // KPI 계산\n  const calculateKPIs = (data) => {\n    let totalYield = 0;\n    let totalRevenue = 0;\n    let totalCost = 0;\n    let avgTemperature = 0;\n    let avgHumidity = 0;\n    let healthScores = [];\n    let farmCount = 0;\n\n    Object.keys(data).forEach(farmCode => {\n      const farmData = data[farmCode];\n      farmCount++;\n\n      // 경영 데이터 집계\n      if (farmData.management && farmData.management.length > 0) {\n        const lastManagementData = farmData.management[farmData.management.length - 1];\n        totalYield += lastManagementData.cumulativeYield || 0;\n        totalRevenue += lastManagementData.cumulativeRevenue || 0;\n        totalCost += lastManagementData.cumulativeCost || 0;\n      }\n\n      // 환경 데이터 평균\n      if (farmData.environment && farmData.environment.length > 0) {\n        const envAvg = farmData.environment.reduce((acc, curr) => ({\n          temperature: acc.temperature + curr.temperature,\n          humidity: acc.humidity + curr.humidity\n        }), { temperature: 0, humidity: 0 });\n        \n        avgTemperature += envAvg.temperature / farmData.environment.length;\n        avgHumidity += envAvg.humidity / farmData.environment.length;\n      }\n\n      // 생육 데이터 건강도\n      if (farmData.growth && farmData.growth.length > 0) {\n        farmData.growth.forEach(g => healthScores.push(g.healthScore));\n      }\n    });\n\n    const avgHealthScore = healthScores.length > 0 \n      ? healthScores.reduce((a, b) => a + b, 0) / healthScores.length \n      : 0;\n\n    const profit = totalRevenue - totalCost;\n    const profitMargin = totalRevenue > 0 ? (profit / totalRevenue) * 100 : 0;\n\n    setKpiData({\n      totalYield: Math.round(totalYield * 10) / 10,\n      totalRevenue: Math.round(totalRevenue),\n      totalCost: Math.round(totalCost),\n      profit: Math.round(profit),\n      profitMargin: Math.round(profitMargin * 10) / 10,\n      avgTemperature: Math.round((avgTemperature / farmCount) * 10) / 10,\n      avgHumidity: Math.round((avgHumidity / farmCount) * 10) / 10,\n      avgHealthScore: Math.round(avgHealthScore * 10) / 10,\n      activeFarms: farmCount\n    });\n  };\n\n  // 환경 분석 컴포넌트\n  const EnvironmentAnalysis = () => {\n    const environmentChartData = [];\n    \n    // 시간별 환경 데이터 집계\n    const timeMap = new Map();\n    \n    Object.keys(analyticsData).forEach(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (farmData.environment) {\n        farmData.environment.forEach(env => {\n          const timeKey = env.date;\n          if (!timeMap.has(timeKey)) {\n            timeMap.set(timeKey, { \n              date: timeKey, \n              temperature: [], \n              humidity: [], \n              co2: [],\n              farms: []\n            });\n          }\n          const timeData = timeMap.get(timeKey);\n          timeData.temperature.push(env.temperature);\n          timeData.humidity.push(env.humidity);\n          timeData.co2.push(env.co2);\n          timeData.farms.push(FARM_CODES[farmCode].name);\n        });\n      }\n    });\n\n    // 일별 평균 계산\n    Array.from(timeMap.values())\n      .sort((a, b) => a.date.localeCompare(b.date))\n      .slice(0, 30) // 최근 30일만 표시\n      .forEach(timeData => {\n        environmentChartData.push({\n          date: timeData.date,\n          temperature: Math.round(timeData.temperature.reduce((a, b) => a + b, 0) / timeData.temperature.length * 10) / 10,\n          humidity: Math.round(timeData.humidity.reduce((a, b) => a + b, 0) / timeData.humidity.length * 10) / 10,\n          co2: Math.round(timeData.co2.reduce((a, b) => a + b, 0) / timeData.co2.length)\n        });\n      });\n\n    return (\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Card title=\"환경 데이터 트렌드\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <ComposedChart data={environmentChartData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis yAxisId=\"temp\" orientation=\"left\" />\n                <YAxis yAxisId=\"co2\" orientation=\"right\" />\n                <Tooltip />\n                <Legend />\n                <Line \n                  yAxisId=\"temp\"\n                  type=\"monotone\" \n                  dataKey=\"temperature\" \n                  stroke=\"#ff7300\" \n                  name=\"온도(°C)\"\n                  strokeWidth={2}\n                />\n                <Line \n                  yAxisId=\"temp\"\n                  type=\"monotone\" \n                  dataKey=\"humidity\" \n                  stroke=\"#387908\" \n                  name=\"습도(%)\"\n                  strokeWidth={2}\n                />\n                <Bar \n                  yAxisId=\"co2\"\n                  dataKey=\"co2\" \n                  fill=\"#8884d8\" \n                  name=\"CO2(ppm)\"\n                  opacity={0.6}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Card>\n        </Col>\n        \n        <Col xs={24} lg={12}>\n          <Card title=\"농장별 환경 비교\">\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <RadarChart data={getFarmEnvironmentComparison()}>\n                <PolarGrid />\n                <PolarAngleAxis dataKey=\"metric\" />\n                <PolarRadiusAxis angle={30} domain={[0, 100]} />\n                <Radar \n                  dataKey=\"score\" \n                  stroke=\"#8884d8\" \n                  fill=\"#8884d8\" \n                  fillOpacity={0.3}\n                  strokeWidth={2}\n                />\n                <Tooltip />\n              </RadarChart>\n            </ResponsiveContainer>\n          </Card>\n        </Col>\n\n        <Col xs={24} lg={12}>\n          <Card title=\"환경 최적화 현황\">\n            <Space direction=\"vertical\" style={{ width: '100%' }}>\n              <Statistic\n                title=\"온도 최적화율\"\n                value={calculateOptimizationRate('temperature')}\n                suffix=\"%\"\n                valueStyle={{ color: '#52c41a' }}\n              />\n              <Statistic\n                title=\"습도 최적화율\"\n                value={calculateOptimizationRate('humidity')}\n                suffix=\"%\"\n                valueStyle={{ color: '#1890ff' }}\n              />\n              <Statistic\n                title=\"CO2 최적화율\"\n                value={calculateOptimizationRate('co2')}\n                suffix=\"%\"\n                valueStyle={{ color: '#722ed1' }}\n              />\n            </Space>\n          </Card>\n        </Col>\n      </Row>\n    );\n  };\n\n  // 생육 분석 컴포넌트\n  const GrowthAnalysis = () => {\n    const growthChartData = [];\n    \n    Object.keys(analyticsData).forEach(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (farmData.growth) {\n        farmData.growth.forEach(growth => {\n          growthChartData.push({\n            ...growth,\n            farmName: FARM_CODES[farmCode].name\n          });\n        });\n      }\n    });\n\n    // 주차별 평균 생육 데이터\n    const weeklyGrowthData = [];\n    const weekMap = new Map();\n    \n    growthChartData.forEach(growth => {\n      if (!weekMap.has(growth.week)) {\n        weekMap.set(growth.week, {\n          week: growth.week,\n          plantHeight: [],\n          leafLength: [],\n          healthScore: []\n        });\n      }\n      const weekData = weekMap.get(growth.week);\n      weekData.plantHeight.push(growth.plantHeight);\n      weekData.leafLength.push(growth.leafLength);\n      weekData.healthScore.push(growth.healthScore);\n    });\n\n    Array.from(weekMap.values()).forEach(weekData => {\n      weeklyGrowthData.push({\n        week: `${weekData.week}주차`,\n        plantHeight: Math.round(weekData.plantHeight.reduce((a, b) => a + b, 0) / weekData.plantHeight.length * 10) / 10,\n        leafLength: Math.round(weekData.leafLength.reduce((a, b) => a + b, 0) / weekData.leafLength.length * 10) / 10,\n        healthScore: Math.round(weekData.healthScore.reduce((a, b) => a + b, 0) / weekData.healthScore.length)\n      });\n    });\n\n    return (\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Card title=\"생육 진행 추이\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <ComposedChart data={weeklyGrowthData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"week\" />\n                <YAxis yAxisId=\"growth\" orientation=\"left\" />\n                <YAxis yAxisId=\"health\" orientation=\"right\" />\n                <Tooltip />\n                <Legend />\n                <Area \n                  yAxisId=\"growth\"\n                  type=\"monotone\" \n                  dataKey=\"plantHeight\" \n                  fill=\"#82ca9d\" \n                  stroke=\"#82ca9d\"\n                  name=\"초장(cm)\"\n                  fillOpacity={0.6}\n                />\n                <Line \n                  yAxisId=\"growth\"\n                  type=\"monotone\" \n                  dataKey=\"leafLength\" \n                  stroke=\"#8884d8\" \n                  name=\"엽장(cm)\"\n                  strokeWidth={2}\n                />\n                <Line \n                  yAxisId=\"health\"\n                  type=\"monotone\" \n                  dataKey=\"healthScore\" \n                  stroke=\"#ff7300\" \n                  name=\"건강도(점)\"\n                  strokeWidth={2}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Card>\n        </Col>\n\n        <Col xs={24} lg={12}>\n          <Card title=\"농장별 생육 현황\">\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <BarChart data={getFarmGrowthComparison()}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"farmName\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"avgPlantHeight\" fill=\"#8884d8\" name=\"평균 초장(cm)\" />\n                <Bar dataKey=\"avgHealthScore\" fill=\"#82ca9d\" name=\"평균 건강도\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </Card>\n        </Col>\n\n        <Col xs={24} lg={12}>\n          <Card title=\"생육 단계별 분포\">\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <BarChart data={getGrowthStageDistribution()}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"stage\" />\n                <YAxis />\n                <Tooltip />\n                <Bar dataKey=\"count\" fill=\"#ff7300\" name=\"농장 수\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </Card>\n        </Col>\n      </Row>\n    );\n  };\n\n  // 경영 분석 컴포넌트\n  const ManagementAnalysis = () => {\n    const managementChartData = [];\n    \n    Object.keys(analyticsData).forEach(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (farmData.management) {\n        farmData.management.forEach(mgmt => {\n          managementChartData.push({\n            ...mgmt,\n            farmName: FARM_CODES[farmCode].name\n          });\n        });\n      }\n    });\n\n    // 월별 수익 데이터\n    const monthlyData = [];\n    const monthMap = new Map();\n    \n    managementChartData.forEach(mgmt => {\n      const month = mgmt.date.substring(0, 7); // YYYY-MM\n      if (!monthMap.has(month)) {\n        monthMap.set(month, {\n          month,\n          revenue: 0,\n          cost: 0,\n          yield: 0,\n          count: 0\n        });\n      }\n      const monthData = monthMap.get(month);\n      monthData.revenue += mgmt.dailyRevenue || 0;\n      monthData.cost += mgmt.dailyCost || 0;\n      monthData.yield += mgmt.dailyYield || 0;\n      monthData.count++;\n    });\n\n    Array.from(monthMap.values()).forEach(monthData => {\n      monthlyData.push({\n        month: monthData.month,\n        revenue: Math.round(monthData.revenue),\n        cost: Math.round(monthData.cost),\n        profit: Math.round(monthData.revenue - monthData.cost),\n        yield: Math.round(monthData.yield * 10) / 10\n      });\n    });\n\n    return (\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Card title=\"월별 경영 성과\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <ComposedChart data={monthlyData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis yAxisId=\"money\" orientation=\"left\" />\n                <YAxis yAxisId=\"yield\" orientation=\"right\" />\n                <Tooltip formatter={(value, name) => [\n                  name.includes('수확량') ? `${value}kg` : `${value.toLocaleString()}원`,\n                  name\n                ]} />\n                <Legend />\n                <Bar \n                  yAxisId=\"money\"\n                  dataKey=\"revenue\" \n                  fill=\"#52c41a\" \n                  name=\"매출\"\n                />\n                <Bar \n                  yAxisId=\"money\"\n                  dataKey=\"cost\" \n                  fill=\"#ff4d4f\" \n                  name=\"비용\"\n                />\n                <Line \n                  yAxisId=\"yield\"\n                  type=\"monotone\" \n                  dataKey=\"yield\" \n                  stroke=\"#1890ff\" \n                  name=\"수확량(kg)\"\n                  strokeWidth={3}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Card>\n        </Col>\n\n        <Col xs={24} lg={12}>\n          <Card title=\"농장별 수익성 비교\">\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <BarChart data={getFarmProfitabilityComparison()}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"farmName\" />\n                <YAxis />\n                <Tooltip formatter={(value) => [`${value}%`, '수익률']} />\n                <Bar dataKey=\"profitMargin\" fill=\"#722ed1\" name=\"수익률(%)\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </Card>\n        </Col>\n\n        <Col xs={24} lg={12}>\n          <Card title=\"투자 효율성 분석\">\n            <Space direction=\"vertical\" style={{ width: '100%' }}>\n              <Statistic\n                title=\"평균 ROI\"\n                value={calculateAverageROI()}\n                suffix=\"%\"\n                precision={1}\n                valueStyle={{ color: '#52c41a' }}\n              />\n              <Statistic\n                title=\"kg당 평균 수익\"\n                value={calculateRevenuePerKg()}\n                prefix=\"₩\"\n                valueStyle={{ color: '#1890ff' }}\n              />\n              <Statistic\n                title=\"운영 효율성\"\n                value={calculateOperationalEfficiency()}\n                suffix=\"/10\"\n                precision={1}\n                valueStyle={{ color: '#722ed1' }}\n              />\n            </Space>\n          </Card>\n        </Col>\n      </Row>\n    );\n  };\n\n  // 헬퍼 함수들\n  const getFarmEnvironmentComparison = () => {\n    return selectedFarms.map(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (!farmData || !farmData.environment) return null;\n      \n      const envData = farmData.environment;\n      const avgTemp = envData.reduce((sum, d) => sum + d.temperature, 0) / envData.length;\n      const avgHumidity = envData.reduce((sum, d) => sum + d.humidity, 0) / envData.length;\n      const avgCO2 = envData.reduce((sum, d) => sum + d.co2, 0) / envData.length;\n      \n      return {\n        farmName: FARM_CODES[farmCode].name,\n        metric: '종합 점수',\n        score: Math.round(((avgTemp/25 + avgHumidity/70 + avgCO2/600) / 3) * 100)\n      };\n    }).filter(Boolean);\n  };\n\n  const getFarmGrowthComparison = () => {\n    return selectedFarms.map(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (!farmData || !farmData.growth) return null;\n      \n      const growthData = farmData.growth;\n      const avgPlantHeight = growthData.reduce((sum, d) => sum + d.plantHeight, 0) / growthData.length;\n      const avgHealthScore = growthData.reduce((sum, d) => sum + d.healthScore, 0) / growthData.length;\n      \n      return {\n        farmName: FARM_CODES[farmCode].name,\n        avgPlantHeight: Math.round(avgPlantHeight * 10) / 10,\n        avgHealthScore: Math.round(avgHealthScore)\n      };\n    }).filter(Boolean);\n  };\n\n  const getFarmProfitabilityComparison = () => {\n    return selectedFarms.map(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (!farmData || !farmData.management) return null;\n      \n      const mgmtData = farmData.management;\n      const totalRevenue = mgmtData.reduce((sum, d) => sum + (d.dailyRevenue || 0), 0);\n      const totalCost = mgmtData.reduce((sum, d) => sum + (d.dailyCost || 0), 0);\n      const profitMargin = totalRevenue > 0 ? ((totalRevenue - totalCost) / totalRevenue) * 100 : 0;\n      \n      return {\n        farmName: FARM_CODES[farmCode].name,\n        profitMargin: Math.round(profitMargin * 10) / 10\n      };\n    }).filter(Boolean);\n  };\n\n  const getGrowthStageDistribution = () => {\n    const stageCount = {};\n    \n    Object.keys(analyticsData).forEach(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (farmData.growth && farmData.growth.length > 0) {\n        const latestGrowth = farmData.growth[farmData.growth.length - 1];\n        const stage = latestGrowth.growthStage;\n        stageCount[stage] = (stageCount[stage] || 0) + 1;\n      }\n    });\n    \n    return Object.keys(stageCount).map(stage => ({\n      stage,\n      count: stageCount[stage]\n    }));\n  };\n\n  const calculateOptimizationRate = (metric) => {\n    let totalCount = 0;\n    let optimalCount = 0;\n    \n    Object.keys(analyticsData).forEach(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (farmData.environment) {\n        farmData.environment.forEach(env => {\n          totalCount++;\n          if (metric === 'temperature' && env.temperature >= 18 && env.temperature <= 25) {\n            optimalCount++;\n          } else if (metric === 'humidity' && env.humidity >= 60 && env.humidity <= 75) {\n            optimalCount++;\n          } else if (metric === 'co2' && env.co2 >= 400 && env.co2 <= 800) {\n            optimalCount++;\n          }\n        });\n      }\n    });\n    \n    return totalCount > 0 ? Math.round((optimalCount / totalCount) * 100) : 0;\n  };\n\n  const calculateAverageROI = () => {\n    let totalROI = 0;\n    let farmCount = 0;\n    \n    Object.keys(analyticsData).forEach(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (farmData.management && farmData.management.length > 0) {\n        const lastData = farmData.management[farmData.management.length - 1];\n        const roi = lastData.cumulativeRevenue > 0 \n          ? (lastData.profit / lastData.cumulativeCost) * 100 \n          : 0;\n        totalROI += roi;\n        farmCount++;\n      }\n    });\n    \n    return farmCount > 0 ? totalROI / farmCount : 0;\n  };\n\n  const calculateRevenuePerKg = () => {\n    let totalRevenue = 0;\n    let totalYield = 0;\n    \n    Object.keys(analyticsData).forEach(farmCode => {\n      const farmData = analyticsData[farmCode];\n      if (farmData.management) {\n        farmData.management.forEach(mgmt => {\n          totalRevenue += mgmt.dailyRevenue || 0;\n          totalYield += mgmt.dailyYield || 0;\n        });\n      }\n    });\n    \n    return totalYield > 0 ? Math.round(totalRevenue / totalYield) : 0;\n  };\n\n  const calculateOperationalEfficiency = () => {\n    // 환경 최적화율, 생육 건강도, 수익률을 종합한 효율성 점수\n    const tempOptimal = calculateOptimizationRate('temperature') / 100;\n    const humidityOptimal = calculateOptimizationRate('humidity') / 100;\n    const avgHealth = kpiData.avgHealthScore / 100;\n    const profitMargin = Math.max(0, Math.min(1, kpiData.profitMargin / 50)); // 50%를 만점으로\n    \n    return ((tempOptimal + humidityOptimal + avgHealth + profitMargin) / 4) * 10;\n  };\n\n  const handleExportData = () => {\n    const exportData = [];\n    \n    Object.keys(analyticsData).forEach(farmCode => {\n      const farmData = analyticsData[farmCode];\n      const farmName = FARM_CODES[farmCode].name;\n      \n      // 환경 데이터 추가\n      if (farmData.environment) {\n        farmData.environment.forEach(env => {\n          exportData.push({\n            농장명: farmName,\n            데이터타입: '환경',\n            날짜: env.date,\n            온도: env.temperature,\n            습도: env.humidity,\n            CO2: env.co2,\n            조도: env.lightIntensity\n          });\n        });\n      }\n      \n      // 생육 데이터 추가\n      if (farmData.growth) {\n        farmData.growth.forEach(growth => {\n          exportData.push({\n            농장명: farmName,\n            데이터타입: '생육',\n            날짜: growth.date,\n            초장: growth.plantHeight,\n            엽장: growth.leafLength,\n            건강도: growth.healthScore,\n            생육단계: growth.growthStage\n          });\n        });\n      }\n    });\n    \n    exportToCSV(exportData, `analytics_data_${dayjs().format('YYYY-MM-DD')}.csv`);\n  };\n\n  return (\n    <div style={{ padding: '24px' }}>\n      {/* 헤더 */}\n      <div style={{ marginBottom: '24px' }}>\n        <Title level={2}>\n          <DashboardOutlined /> 데이터 분석 대시보드\n        </Title>\n        <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>\n          <Text type=\"secondary\">농장 데이터 통합 분석 및 시각화</Text>\n          <div style={{ \n            padding: '4px 8px', \n            borderRadius: '4px', \n            backgroundColor: isUsingRealData() ? '#f6ffed' : '#fff7e6',\n            border: `1px solid ${isUsingRealData() ? '#b7eb8f' : '#ffd591'}`\n          }}>\n            <Text style={{ \n              color: isUsingRealData() ? '#52c41a' : '#fa8c16',\n              fontSize: '12px'\n            }}>\n              {isUsingRealData() ? '📊 실제 엑셀 데이터 + 보간' : '🔬 시뮬레이션 데이터'}\n            </Text>\n          </div>\n        </div>\n      </div>\n\n      {/* 필터 영역 */}\n      <Card style={{ marginBottom: '24px' }}>\n        <Row gutter={16} align=\"middle\">\n          <Col xs={24} sm={8}>\n            <Space direction=\"vertical\" style={{ width: '100%' }}>\n              <Text strong>농장 선택</Text>\n              <Select\n                mode=\"multiple\"\n                placeholder=\"농장을 선택하세요\"\n                value={selectedFarms}\n                onChange={setSelectedFarms}\n                style={{ width: '100%' }}\n              >\n                {Object.keys(FARM_CODES).map(farmCode => (\n                  <Option key={farmCode} value={farmCode}>\n                    {FARM_CODES[farmCode].name} ({FARM_CODES[farmCode].region})\n                  </Option>\n                ))}\n              </Select>\n            </Space>\n          </Col>\n          \n          <Col xs={24} sm={8}>\n            <Space direction=\"vertical\" style={{ width: '100%' }}>\n              <Text strong>기간 선택</Text>\n              <RangePicker\n                value={dateRange}\n                onChange={setDateRange}\n                style={{ width: '100%' }}\n              />\n            </Space>\n          </Col>\n          \n          <Col xs={24} sm={8}>\n            <Space style={{ marginTop: '24px' }}>\n              <Button \n                type=\"primary\" \n                icon={<ReloadOutlined />}\n                loading={loading}\n                onClick={loadAnalyticsData}\n              >\n                데이터 새로고침\n              </Button>\n              <Button \n                icon={<DownloadOutlined />}\n                onClick={handleExportData}\n              >\n                데이터 내보내기\n              </Button>\n            </Space>\n          </Col>\n        </Row>\n      </Card>\n\n      {loading ? (\n        <div style={{ textAlign: 'center', padding: '50px' }}>\n          <Spin size=\"large\" />\n          <div style={{ marginTop: '16px' }}>\n            <Text>데이터를 분석하고 있습니다...</Text>\n          </div>\n        </div>\n      ) : (\n        <>\n          {/* KPI 카드 */}\n          <Row gutter={[16, 16]} style={{ marginBottom: '24px' }}>\n            <Col xs={24} sm={12} lg={6}>\n              <Card>\n                <Statistic\n                  title=\"총 수확량\"\n                  value={kpiData.totalYield}\n                  suffix=\"kg\"\n                  precision={1}\n                  valueStyle={{ color: '#52c41a' }}\n                />\n              </Card>\n            </Col>\n            <Col xs={24} sm={12} lg={6}>\n              <Card>\n                <Statistic\n                  title=\"총 매출\"\n                  value={kpiData.totalRevenue}\n                  prefix=\"₩\"\n                  formatter={(value) => `${(value / 1000000).toFixed(1)}M`}\n                  valueStyle={{ color: '#1890ff' }}\n                />\n              </Card>\n            </Col>\n            <Col xs={24} sm={12} lg={6}>\n              <Card>\n                <Statistic\n                  title=\"수익률\"\n                  value={kpiData.profitMargin}\n                  suffix=\"%\"\n                  precision={1}\n                  valueStyle={{ color: kpiData.profitMargin > 0 ? '#52c41a' : '#ff4d4f' }}\n                />\n              </Card>\n            </Col>\n            <Col xs={24} sm={12} lg={6}>\n              <Card>\n                <Statistic\n                  title=\"평균 건강도\"\n                  value={kpiData.avgHealthScore}\n                  suffix=\"점\"\n                  valueStyle={{ color: '#722ed1' }}\n                />\n              </Card>\n            </Col>\n          </Row>\n\n          {/* 분석 탭 */}\n          <Card>\n            <Tabs \n              activeKey={activeTab} \n              onChange={setActiveTab}\n              items={[\n                {\n                  key: 'environment',\n                  label: <span><LineChartOutlined />환경 분석</span>,\n                  children: EnvironmentAnalysis()\n                },\n                {\n                  key: 'growth',\n                  label: <span><BarChartOutlined />생육 분석</span>,\n                  children: GrowthAnalysis()\n                },\n                {\n                  key: 'management',\n                  label: <span><DashboardOutlined />경영 분석</span>,\n                  children: ManagementAnalysis()\n                }\n              ]}\n            />\n          </Card>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default AnalyticsDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}