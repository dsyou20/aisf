{"ast":null,"code":"var _jsxFileName = \"/DATA1/elcom/aisf2/aisf/frontend/src/pages/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Input, Button, Card, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n`;\n_c = LoginContainer;\nconst LoginCard = styled(Card)`\n  width: 400px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  border-radius: 16px;\n  \n  .ant-card-head-title {\n    text-align: center;\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n  }\n`;\n_c2 = LoginCard;\nconst Login = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const onFinish = async values => {\n    setLoading(true);\n    try {\n      // 임시 로그인 로직 (실제로는 API 호출)\n      if (values.username === 'admin' && values.password === 'admin') {\n        message.success('로그인 성공!');\n        navigate('/dashboard');\n      } else {\n        message.error('아이디 또는 비밀번호가 올바르지 않습니다.');\n      }\n    } catch (error) {\n      message.error('로그인 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoginContainer, {\n    children: /*#__PURE__*/_jsxDEV(LoginCard, {\n      title: \"\\uC2A4\\uB9C8\\uD2B8\\uD31C AI\\uC7AC\\uBC30\\uAD00\\uB9AC \\uC194\\uB8E8\\uC158\",\n      headStyle: {\n        borderBottom: 'none',\n        paddingBottom: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: \"login\",\n        onFinish: onFinish,\n        autoComplete: \"off\",\n        size: \"large\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"username\",\n          rules: [{\n            required: true,\n            message: '아이디를 입력해주세요!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 23\n            }, this),\n            placeholder: \"\\uC544\\uC774\\uB514\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: '비밀번호를 입력해주세요!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 23\n            }, this),\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            loading: loading,\n            style: {\n              width: '100%',\n              height: '48px'\n            },\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            color: '#666'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD14C\\uC2A4\\uD2B8 \\uACC4\\uC815: admin / admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"DnY8KtHWiqG98vKbBdb88BioG/Y=\", false, function () {\n  return [useNavigate];\n});\n_c3 = Login;\nexport default Login;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoginContainer\");\n$RefreshReg$(_c2, \"LoginCard\");\n$RefreshReg$(_c3, \"Login\");","map":{"version":3,"names":["React","useState","Form","Input","Button","Card","message","UserOutlined","LockOutlined","useNavigate","styled","jsxDEV","_jsxDEV","LoginContainer","div","_c","LoginCard","_c2","Login","_s","loading","setLoading","navigate","onFinish","values","username","password","success","error","children","title","headStyle","borderBottom","paddingBottom","name","autoComplete","size","Item","rules","required","prefix","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","Password","type","htmlType","style","width","height","textAlign","color","_c3","$RefreshReg$"],"sources":["/DATA1/elcom/aisf2/aisf/frontend/src/pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Form, Input, Button, Card, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst LoginContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n`;\n\nconst LoginCard = styled(Card)`\n  width: 400px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  border-radius: 16px;\n  \n  .ant-card-head-title {\n    text-align: center;\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n  }\n`;\n\nconst Login = () => {\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const onFinish = async (values) => {\n    setLoading(true);\n    try {\n      // 임시 로그인 로직 (실제로는 API 호출)\n      if (values.username === 'admin' && values.password === 'admin') {\n        message.success('로그인 성공!');\n        navigate('/dashboard');\n      } else {\n        message.error('아이디 또는 비밀번호가 올바르지 않습니다.');\n      }\n    } catch (error) {\n      message.error('로그인 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <LoginContainer>\n      <LoginCard\n        title=\"스마트팜 AI재배관리 솔루션\"\n        headStyle={{ borderBottom: 'none', paddingBottom: 0 }}\n      >\n        <Form\n          name=\"login\"\n          onFinish={onFinish}\n          autoComplete=\"off\"\n          size=\"large\"\n        >\n          <Form.Item\n            name=\"username\"\n            rules={[{ required: true, message: '아이디를 입력해주세요!' }]}\n          >\n            <Input\n              prefix={<UserOutlined />}\n              placeholder=\"아이디\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: '비밀번호를 입력해주세요!' }]}\n          >\n            <Input.Password\n              prefix={<LockOutlined />}\n              placeholder=\"비밀번호\"\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              loading={loading}\n              style={{ width: '100%', height: '48px' }}\n            >\n              로그인\n            </Button>\n          </Form.Item>\n\n          <div style={{ textAlign: 'center', color: '#666' }}>\n            <p>테스트 계정: admin / admin</p>\n          </div>\n        </Form>\n      </LoginCard>\n    </LoginContainer>\n  );\n};\n\nexport default Login; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,QAAQ,MAAM;AACzD,SAASC,YAAY,EAAEC,YAAY,QAAQ,mBAAmB;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGH,MAAM,CAACI,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,cAAc;AAQpB,MAAMG,SAAS,GAAGN,MAAM,CAACL,IAAI,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACY,GAAA,GAXID,SAAS;AAaf,MAAME,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMqB,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,QAAQ,GAAG,MAAOC,MAAM,IAAK;IACjCH,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF;MACA,IAAIG,MAAM,CAACC,QAAQ,KAAK,OAAO,IAAID,MAAM,CAACE,QAAQ,KAAK,OAAO,EAAE;QAC9DpB,OAAO,CAACqB,OAAO,CAAC,SAAS,CAAC;QAC1BL,QAAQ,CAAC,YAAY,CAAC;MACxB,CAAC,MAAM;QACLhB,OAAO,CAACsB,KAAK,CAAC,yBAAyB,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdtB,OAAO,CAACsB,KAAK,CAAC,mBAAmB,CAAC;IACpC,CAAC,SAAS;MACRP,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACET,OAAA,CAACC,cAAc;IAAAgB,QAAA,eACbjB,OAAA,CAACI,SAAS;MACRc,KAAK,EAAC,wEAAiB;MACvBC,SAAS,EAAE;QAAEC,YAAY,EAAE,MAAM;QAAEC,aAAa,EAAE;MAAE,CAAE;MAAAJ,QAAA,eAEtDjB,OAAA,CAACV,IAAI;QACHgC,IAAI,EAAC,OAAO;QACZX,QAAQ,EAAEA,QAAS;QACnBY,YAAY,EAAC,KAAK;QAClBC,IAAI,EAAC,OAAO;QAAAP,QAAA,gBAEZjB,OAAA,CAACV,IAAI,CAACmC,IAAI;UACRH,IAAI,EAAC,UAAU;UACfI,KAAK,EAAE,CAAC;YAAEC,QAAQ,EAAE,IAAI;YAAEjC,OAAO,EAAE;UAAe,CAAC,CAAE;UAAAuB,QAAA,eAErDjB,OAAA,CAACT,KAAK;YACJqC,MAAM,eAAE5B,OAAA,CAACL,YAAY;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YACzBC,WAAW,EAAC;UAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAAC,eAEZhC,OAAA,CAACV,IAAI,CAACmC,IAAI;UACRH,IAAI,EAAC,UAAU;UACfI,KAAK,EAAE,CAAC;YAAEC,QAAQ,EAAE,IAAI;YAAEjC,OAAO,EAAE;UAAgB,CAAC,CAAE;UAAAuB,QAAA,eAEtDjB,OAAA,CAACT,KAAK,CAAC2C,QAAQ;YACbN,MAAM,eAAE5B,OAAA,CAACJ,YAAY;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YACzBC,WAAW,EAAC;UAAM;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAAC,eAEZhC,OAAA,CAACV,IAAI,CAACmC,IAAI;UAAAR,QAAA,eACRjB,OAAA,CAACR,MAAM;YACL2C,IAAI,EAAC,SAAS;YACdC,QAAQ,EAAC,QAAQ;YACjB5B,OAAO,EAAEA,OAAQ;YACjB6B,KAAK,EAAE;cAAEC,KAAK,EAAE,MAAM;cAAEC,MAAM,EAAE;YAAO,CAAE;YAAAtB,QAAA,EAC1C;UAED;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAEZhC,OAAA;UAAKqC,KAAK,EAAE;YAAEG,SAAS,EAAE,QAAQ;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAAxB,QAAA,eACjDjB,OAAA;YAAAiB,QAAA,EAAG;UAAqB;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAErB,CAAC;AAACzB,EAAA,CAvEID,KAAK;EAAA,QAEQT,WAAW;AAAA;AAAA6C,GAAA,GAFxBpC,KAAK;AAyEX,eAAeA,KAAK;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAAqC,GAAA;AAAAC,YAAA,CAAAxC,EAAA;AAAAwC,YAAA,CAAAtC,GAAA;AAAAsC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}